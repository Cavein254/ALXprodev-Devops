#!/bin/bash

# Directory to store Pokémon data
OUTPUT_DIR="pokemon_data"
mkdir -p "$OUTPUT_DIR"

# List of Pokémon
POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Function to fetch data for a single Pokémon
fetch_pokemon() {
  local pokemon=$1
  local max_retries=3
  local attempt=1
  local success=false

  echo "Fetching data for $pokemon..."

  while [ $attempt -le $max_retries ]; do
    response=$(curl -s -w "%{http_code}" -o "$OUTPUT_DIR/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon")

    if [ "$response" -eq 200 ]; then
      echo "Saved data to $OUTPUT_DIR/$pokemon.json ✅"
      success=true
      break
    else
      echo "Attempt $attempt failed for $pokemon (status code $response). Retrying..."
      ((attempt++))
      sleep 2
    fi
  done

  if [ "$success" = false ]; then
    echo "[$(date)] Error: Failed to fetch data for $pokemon after $max_retries attempts" >> errors.txt
    rm -f "$OUTPUT_DIR/$pokemon.json"
  fi
}

# Launch fetch operations in parallel
for pokemon in "${POKEMONS[@]}"; do
  fetch_pokemon "$pokemon" &
done

# Monitor background jobs
while jobs %%; do
  sleep 1
done

# Ensure no background processes are left hanging
jobs -p | xargs -r kill

echo "All Pokémon data fetched successfully."
